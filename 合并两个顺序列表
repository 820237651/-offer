import java.util.*;

/*
 * public class ListNode {
 *   int val;
 *   ListNode next = null;
 *   public ListNode(int val) {
 *     this.val = val;
 *   }
 * }
 */

public class Solution {
    /**
     * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可
     *
     * 
     * @param pHead1 ListNode类 
     * @param pHead2 ListNode类 
     * @return ListNode类
     */
    public ListNode Merge (ListNode pHead1, ListNode pHead2) {
        // write code here
        if(pHead1==null){
            return pHead2;
        }
        if(pHead2==null){
            return pHead1;
        }

        ListNode head=new ListNode(-1);//创建一个表头
        ListNode hn=head;//真正遍历的指针

        while(pHead1!=null&&pHead2!=null){
            if(pHead1.val<pHead2.val){
                hn.next=pHead1;
                pHead1=pHead1.next;
                hn=hn.next;
            }else if(pHead1.val>pHead2.val){
                hn.next=pHead2;
                pHead2=pHead2.next;
                hn=hn.next;
            }
            else{//别忘记还有相等的情况
                hn.next=pHead1;
                pHead1=pHead1.next;
                hn=hn.next;

                hn.next=pHead2;
                pHead2=pHead2.next;
                hn=hn.next;
            }
        }
        
        if(pHead1==null){
            hn.next=pHead2;
        }
        if(pHead2==null){
            hn.next=pHead1;
        }
        return head.next;
    }

}
