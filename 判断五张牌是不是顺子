现在有2副扑克牌，从扑克牌中随机五张扑克牌，我们需要来判断一下是不是顺子。
有如下规则：
1. A为1，J为11，Q为12，K为13，A不能视为14
2. 大、小王为 0，0可以看作任意牌
3. 如果给出的五张牌能组成顺子（即这五张牌是连续的）就输出true，否则就输出false。
4.数据保证每组5个数字，每组最多含有4个零，数组的数取值为 [0, 13]


import java.util.*;


public class Solution {
    /**
     * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可
     *
     * 
     * @param numbers int整型一维数组 
     * @return bool布尔型
     */
    public boolean IsContinuous (int[] numbers) {
        // write code here
        HashMap<Integer,Integer>mp=new HashMap<>();

        int max=0;
        int min=13;

        for(int i=0;i<numbers.length;i++){
            if(numbers[i]>0){
            if(mp.containsKey(numbers[i])){
                return false;
            }
            else{
                mp.put(numbers[i],i);
                if(max<numbers[i]){
                    max=numbers[i];
                }
                if(min>numbers[i]){
                    min=numbers[i];
                }
            }
          }
        }
        if(max-min>=5){
            return false;
        }
        else{
            return true;
        }
    }
}
